version: '3.8'
services:
  springboot:
    build:
      context: ./SpringBoot
      dockerfile: Dockerfile
    container_name: springboot

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=dev
      - DB_SERVER=${DB_SERVER}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - REDIS_CACHE_HOST=${REDIS_CACHE_HOST}
      - REDIS_CACHE_PORT=${REDIS_CACHE_PORT}
      - REDIS_SESSION1_HOST=${REDIS_SESSION1_HOST}
      - REDIS_SESSION1_PORT=${REDIS_SESSION1_PORT}
      - REDIS_SESSION2_HOST=${REDIS_SESSION2_HOST}
      - REDIS_SESSION2_PORT=${REDIS_SESSION2_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - DEEPSEARCH_API_KEY=${DEEPSEARCH_API_KEY}
      - ELASTICSEARCH_SERVER=${ELASTICSEARCH_SERVER}
      - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
      - BASE_URL=${BASE_URL}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
    ports:
      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      # mysql 의존성 제거 - RDS 사용으로 인해 불필요
      redis-cache:
        condition: service_started
      redis-session1:
        condition: service_started
      redis-session2:
        condition: service_started
    networks:
      - backend

  # MySQL 서비스 제거 - RDS 사용
  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   environment:
  #     - TZ=Asia/Seoul
  #     - MYSQL_ROOT_PASSWORD=${DB_PASS}
  #     - MYSQL_DATABASE=backendDB
  #   command: ["mysqld", "--default-time-zone=+09:00"]
  #   ports:
  #     - "3306:3306"
  #   healthcheck:
  #     test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #     - /etc/localtime:/etc/localtime:ro
  #     - /etc/timezone:/etc/timezone:ro
  #   networks:
  #     - backend

  redis-cache:
    image: redis:7.2
    container_name: redis-cache
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    environment:
      - TZ=Asia/Seoul
    ports:
      - "6379:6379"
    volumes:
      - redis-cache-data:/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - backend

  redis-session1:
    image: redis:7.2
    container_name: redis-session1
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - TZ=Asia/Seoul
    ports:
      - "6380:6379"
    volumes:
      - redis-session1-data:/data
      - ./redis/redis-session1.conf:/usr/local/etc/redis/redis.conf
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - backend

  redis-session2:
    image: redis:7.2
    container_name: redis-session2
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - TZ=Asia/Seoul
    ports:
      - "6381:6379"
    volumes:
      - redis-session2-data:/data
      - ./redis/redis-session2.conf:/usr/local/etc/redis/redis.conf
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Seoul
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend
    volumes:
      - ./ElasticSearch/stopwords.txt:/usr/share/elasticsearch/config/stopwords.txt
      - es-data:/usr/share/elasticsearch/data
      - es-plugins:/usr/share/elasticsearch/plugins
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  # Prometheus/Grafana - 메모리 부하로 인해 주석 처리 (CloudWatch 사용 예정)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    ports:
      - "3000:3000"
    networks:
      - backend
    volumes:
      - grafana-data:/var/lib/grafana

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"
    command:
      - '--redis.addr=redis://redis-cache:6379'
    ports:
      - "9121:9121"
    depends_on:
      - redis-cache
    networks:
      - backend

  redis-session1-exporter:
    image: oliver006/redis_exporter
    container_name: redis-session1-exporter
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"
    command:
      - '--redis.addr=redis://redis-session1:6379'
    ports:
      - "9122:9121"
    networks:
      - backend

  redis-session2-exporter:
    image: oliver006/redis_exporter
    container_name: redis-session2-exporter
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"
    command:
      - '--redis.addr=redis://redis-session2:6379'
    ports:
      - "9123:9121"
    networks:
      - backend

volumes:
  # mysql-data: # RDS 사용으로 인해 불필요
  redis-cache-data:
  redis-session1-data:
  redis-session2-data:
  es-data:
  es-plugins:
  prometheus-data: # Prometheus 제거로 인해 불필요
  grafana-data: # Grafana 제거로 인해 불필요

networks:
  backend:
    driver: bridge