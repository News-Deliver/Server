
    /**
     * 내 히스토리 조회하기 메서드 (페이지 네이션 적용)
     *
     * @param page 시작 페이지
     * @param size 페이지 사이즈
     * @return 페이지 네이션이 적용된 히스토리
     */
    public PageResponse<GroupedNewsHistoryResponse> getGroupedNewsHistory(int page, int size) {
        Long userId = 1L;

        // 1. 모든 히스토리 조회
        List<History> allHistories = historyRepository.findAllBySetting_User_Id(userId);

        // 2. 히스토리 ID 수집 → Feedback 일괄 조회
        List<Long> historyIds = allHistories.stream()
                .map(History::getId)
                .collect(Collectors.toList());

        Map<Long, Feedback> feedbackMap = feedbackRepository.findAllById(historyIds)
                .stream()
                .collect(Collectors.toMap(fb -> fb.getHistory().getId(), fb -> fb));

        // 3. 그룹핑: settingId + publishedAt(HOUR)
        Map<String, List<History>> grouped = allHistories.stream()
                .collect(Collectors.groupingBy(h -> {
                    Long settingId = h.getSetting().getId();
                    LocalDateTime truncatedPublishedAt = h.getPublishedAt().truncatedTo(ChronoUnit.HOURS);
                    return settingId + "_" + truncatedPublishedAt;
                }));

        // 4. DTO 변환
        List<GroupedNewsHistoryResponse> groupedList = grouped.entrySet().stream()
                .map(entry -> {
                    List<History> histories = entry.getValue();
                    History any = histories.get(0);

                    List<NewsHistoryResponse> newsResponses = histories.stream()
                            .map(history -> {
                                Feedback feedback = feedbackMap.get(history.getId());
                                return NewsHistoryResponse.from(history, feedback);
                            })
                            .toList();

                    return GroupedNewsHistoryResponse.builder()
                            .settingId(any.getSetting().getId())
                            .publishedAt(any.getPublishedAt().truncatedTo(ChronoUnit.HOURS))
                            .settingKeyword(any.getSettingKeyword())
                            .blockKeyword(any.getBlockKeyword())
                            .newsList(newsResponses)
                            .build();
                })
                .sorted(Comparator.comparing(GroupedNewsHistoryResponse::getPublishedAt).reversed())
                .collect(Collectors.toList());

        // 5. 페이지네이션
        int fromIndex = page * size;
        int toIndex = Math.min(fromIndex + size, groupedList.size());

        if (fromIndex >= groupedList.size()) {
            return Collections.emptyList();
        }

        return groupedList.subList(fromIndex, toIndex);
    }